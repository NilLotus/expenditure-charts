{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React\\\\01-starting-setup\\\\src\\\\Components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nimport Card from \"../UI/Card\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  const toggleForm = () => {\n    setShowForm(prevState => !prevState);\n  };\n\n  let expenseFormContent;\n\n  if (showForm) {\n    expenseFormContent = /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      toggle: toggleForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else {\n    expenseFormContent = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-expense__cancelutton\",\n      onClick: toggleForm,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"new-expense\",\n    children: expenseFormContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"kaMG6XwWu8g4QBLwMinxod9pp4Q=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["E:/Projects/React/01-starting-setup/src/Components/NewExpense/NewExpense.js"],"names":["ExpenseForm","Card","useState","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","showForm","setShowForm","toggleForm","prevState","expenseFormContent"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,sBAAsB,GAAIC,kBAAD,IAAwB;AACrD,UAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFc,KAApB;AAIAP,IAAAA,KAAK,CAACQ,YAAN,CAAmBL,WAAnB;AACD,GAND;;AAOA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAX;AACD,GAFD;;AAGA,MAAIC,kBAAJ;;AAEA,MAAIJ,QAAJ,EAAc;AACZI,IAAAA,kBAAkB,gBAChB,QAAC,WAAD;AACE,MAAA,iBAAiB,EAAEZ,sBADrB;AAEE,MAAA,MAAM,EAAEU;AAFV;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,MAOO;AACLE,IAAAA,kBAAkB,gBAAG;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAEF,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB;AACD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BD;;GAAMd,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const toggleForm = () => {\r\n    setShowForm((prevState) => !prevState);\r\n  };\r\n  let expenseFormContent;\r\n\r\n  if (showForm) {\r\n    expenseFormContent = (\r\n      <ExpenseForm\r\n        onSaveExpenseData={saveExpenseDataHandler}\r\n        toggle={toggleForm}\r\n      />\r\n    );\r\n  } else {\r\n    expenseFormContent = <button className='new-expense__cancelutton' onClick={toggleForm}>Add New Expense</button>;\r\n  }\r\n  return (\r\n    <Card className=\"new-expense\">\r\n      {expenseFormContent}\r\n    </Card>\r\n  );\r\n};\r\nexport default NewExpense;\r\n"]},"metadata":{},"sourceType":"module"}