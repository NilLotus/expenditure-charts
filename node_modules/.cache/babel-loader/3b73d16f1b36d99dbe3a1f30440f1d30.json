{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React\\\\01-starting-setup\\\\src\\\\Components\\\\Expenses\\\\ExpensesChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const dataPoints = [{\n    label: \"Jan\",\n    value: nul\n  }, {\n    label: \"Feb\",\n    value: nul\n  }, {\n    label: \"Mar\",\n    value: nul\n  }, {\n    label: \"Apr\",\n    value: nul\n  }, {\n    label: \"May\",\n    value: nul\n  }, {\n    label: \"Jun\",\n    value: nul\n  }, {\n    label: \"Jul\",\n    value: nul\n  }, {\n    label: \"Aug\",\n    value: nul\n  }, {\n    label: \"Sep\",\n    value: nul\n  }, {\n    label: \"Oct\",\n    value: nul\n  }, {\n    label: \"Nov\",\n    value: nul\n  }, {\n    label: \"Dec\",\n    value: nul\n  }]; //   for (const index in dataPoints) {\n  //     let filterSameMonth = props.expenses.filter(\n  //       (expense) => expense.date.getMonth() == index\n  //     );\n  //     let filterAmounts = filterSameMonth.map((expense) => expense.amount);\n  //     if (filterAmounts.length) {\n  //         dataPoints[index].value = filterAmounts.reduce((a, b) => a + b);\n  //     }\n  //   }\n  //   let dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\n  //   let maxValue = Math.max(...dataPointValues);\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    dataPoints[expenseMonth].value += expense.amount;\n    console.log(dataPoints[expenseMonth].value, expense.amount);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: dataPoints,\n    expenses: props.expenses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["E:/Projects/React/01-starting-setup/src/Components/Expenses/ExpensesChart.js"],"names":["Chart","ExpensesChart","props","dataPoints","label","value","nul","expense","expenses","expenseMonth","date","getMonth","amount","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GADiB,EAEjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GAFiB,EAGjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GAHiB,EAIjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GAJiB,EAKjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GALiB,EAMjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GANiB,EAOjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GAPiB,EAQjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GARiB,EASjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GATiB,EAUjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GAViB,EAWjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GAXiB,EAYjB;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEC;AAAvB,GAZiB,CAAnB,CAD+B,CAejC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAI,MAAMC,OAAV,IAAqBL,KAAK,CAACM,QAA3B,EAAoC;AAChC,UAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB;AACAR,IAAAA,UAAU,CAACM,YAAD,CAAV,CAAyBJ,KAAzB,IAAkCE,OAAO,CAACK,MAA1C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAU,CAACM,YAAD,CAAV,CAAyBJ,KAArC,EAA4CE,OAAO,CAACK,MAApD;AACH;;AACC,sBACI,QAAC,KAAD;AACE,IAAA,UAAU,EAAET,UADd;AAEE,IAAA,QAAQ,EAAED,KAAK,CAACM;AAFlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMD,CAtCD;;KAAMP,a;AAuCN,eAAeA,aAAf","sourcesContent":["import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const dataPoints = [\r\n    { label: \"Jan\", value: nul },\r\n    { label: \"Feb\", value: nul },\r\n    { label: \"Mar\", value: nul },\r\n    { label: \"Apr\", value: nul },\r\n    { label: \"May\", value: nul },\r\n    { label: \"Jun\", value: nul },\r\n    { label: \"Jul\", value: nul },\r\n    { label: \"Aug\", value: nul },\r\n    { label: \"Sep\", value: nul },\r\n    { label: \"Oct\", value: nul },\r\n    { label: \"Nov\", value: nul },\r\n    { label: \"Dec\", value: nul },\r\n  ];\r\n//   for (const index in dataPoints) {\r\n//     let filterSameMonth = props.expenses.filter(\r\n//       (expense) => expense.date.getMonth() == index\r\n//     );\r\n//     let filterAmounts = filterSameMonth.map((expense) => expense.amount);\r\n//     if (filterAmounts.length) {\r\n//         dataPoints[index].value = filterAmounts.reduce((a, b) => a + b);\r\n//     }\r\n//   }\r\n//   let dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\r\n//   let maxValue = Math.max(...dataPointValues);\r\n\r\nfor(const expense of props.expenses){\r\n    const expenseMonth = expense.date.getMonth();\r\n    dataPoints[expenseMonth].value += expense.amount;\r\n    console.log(dataPoints[expenseMonth].value, expense.amount);\r\n}\r\n  return (\r\n      <Chart\r\n        dataPoints={dataPoints}\r\n        expenses={props.expenses}\r\n      />\r\n  );\r\n};\r\nexport default ExpensesChart;\r\n"]},"metadata":{},"sourceType":"module"}