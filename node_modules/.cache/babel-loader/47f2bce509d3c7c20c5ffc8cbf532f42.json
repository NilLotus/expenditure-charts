{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React\\\\01-starting-setup\\\\src\\\\Components\\\\Expenses\\\\ExpensesChart.js\";\nimport Chart from \"./../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const dataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  for (const index in dataPoints) {\n    let dataPointValue = dataPoints[index].value;\n    let filterSameMonth = props.expenses.filter(expense => expense.date.getMonth == index);\n    let filterAmounts = filterSameMonth.map(expense => expense.amount);\n\n    if (filterAmounts.length) {\n      dataPointValue = filterAmounts.reduce((a, b) => a + b);\n    }\n\n    ;\n  }\n\n  let dataPointValues = dataPoints.map(dataPoint => dataPoint.value);\n  let maxValue = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      dataPoints: dataPoints,\n      expenses: props.expenses,\n      maxValue: maxValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["E:/Projects/React/01-starting-setup/src/Components/Expenses/ExpensesChart.js"],"names":["Chart","ExpensesChart","props","dataPoints","label","value","index","dataPointValue","filterSameMonth","expenses","filter","expense","date","getMonth","filterAmounts","map","amount","length","reduce","a","b","dataPointValues","dataPoint","maxValue","Math","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADiB,EAEjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFiB,EAGjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHiB,EAIjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJiB,EAKjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALiB,EAMjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GANiB,EAOjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAPiB,EAQjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GARiB,EASjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GATiB,EAUjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAViB,EAWjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAXiB,EAYjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAZiB,CAAnB;;AAcA,OAAK,MAAMC,KAAX,IAAoBH,UAApB,EAAgC;AAC9B,QAAII,cAAc,GAAGJ,UAAU,CAACG,KAAD,CAAV,CAAkBD,KAAvC;AAEA,QAAIG,eAAe,GAAGN,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,QAAb,IAAyBP,KAA5D,CAAtB;AACA,QAAIQ,aAAa,GAAGN,eAAe,CAACO,GAAhB,CAAqBJ,OAAD,IAAaA,OAAO,CAACK,MAAzC,CAApB;;AACE,QAAGF,aAAa,CAACG,MAAjB,EAAwB;AACtBV,MAAAA,cAAc,GAAGO,aAAa,CAACI,MAAd,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAnC,CAAjB;AACD;;AAAA;AACJ;;AACD,MAAIC,eAAe,GAAGlB,UAAU,CAACY,GAAX,CAAeO,SAAS,IAAIA,SAAS,CAACjB,KAAtC,CAAtB;AACA,MAAIkB,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGJ,eAAZ,CAAf;AACA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,UAAU,EAAElB,UAAnB;AAA+B,MAAA,QAAQ,EAAED,KAAK,CAACO,QAA/C;AAAyD,MAAA,QAAQ,EAAEc;AAAnE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BD;;KAAMtB,a;AAgCN,eAAeA,aAAf","sourcesContent":["import Chart from \"./../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const dataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (const index in dataPoints) {\r\n    let dataPointValue = dataPoints[index].value;\r\n    \r\n    let filterSameMonth = props.expenses.filter((expense) => expense.date.getMonth == index);\r\n    let filterAmounts = filterSameMonth.map((expense) => expense.amount)\r\n      if(filterAmounts.length){\r\n        dataPointValue = filterAmounts.reduce((a, b) => a + b)\r\n      };\r\n  }\r\n  let dataPointValues = dataPoints.map(dataPoint => dataPoint.value)\r\n  let maxValue = Math.max(...dataPointValues)\r\n  return (\r\n    <div>\r\n      <Chart dataPoints={dataPoints} expenses={props.expenses} maxValue={maxValue}/>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpensesChart;\r\n"]},"metadata":{},"sourceType":"module"}